spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/ownerDB
    username: postgres
    password: password!
    driverClassName: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: 'create-drop'
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    # By default, data.sql scripts get executed before the Hibernate is initialized.
    # We need Hibernate to create our tables before inserting the data into them.
    #T o achieve this, we need to defer the initialization of our data source
    defer-datasource-initialization: true

  # Please note that for any script-based initialization, i.e. inserting data via data.sql or
  # creating schema via schema.sql (which we'll learn next), we need to set the below property:
  sql:
    init:
      mode: always


logging:
  level:
    root: INFO
    org.springframework.web: INFO
    com.example.employeeworld: INFO
  pattern:
    console: "%clr(%d{yy-MM-dd E HH:mm:ss.SSS}){blue} %clr(%-5p) %clr(${PID}){faint} %clr(---){faint} %clr([%8.15t]){cyan} %clr(%-40.40logger{0}){blue} %clr(:){red} %clr(%m){faint}%n"

server:
  port: 8081


application:
  security:
    jwt:
      secret-key: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970